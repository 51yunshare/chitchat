<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.chitchat.admin.dao.SysBaseConfigDaoI">
  <resultMap id="BaseResultMap" type="com.chitchat.admin.bean.SysBaseConfig">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="config_name" jdbcType="VARCHAR" property="configName" />
    <result column="config_key" jdbcType="VARCHAR" property="configKey" />
    <result column="config_value" jdbcType="VARCHAR" property="configValue" />
    <result column="config_type" jdbcType="INTEGER" property="configType" />
    <result column="creator" jdbcType="VARCHAR" property="creator" />
    <result column="memo" jdbcType="VARCHAR" property="memo" />
    <result column="modified_time" jdbcType="TIMESTAMP" property="modifiedTime" />
    <result column="created_time" jdbcType="TIMESTAMP" property="createdTime" />
  </resultMap>

  <sql id="Base_Column_List">
    id, config_name, config_key, config_value, config_type, creator, memo, modified_time,
    created_time
  </sql>

  <insert id="insert" parameterType="com.chitchat.admin.bean.SysBaseConfig">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into sys_base_config (config_name, config_key, config_value,
    config_type, creator, memo,
    modified_time, created_time)
    values (#{configName,jdbcType=VARCHAR}, #{configKey,jdbcType=VARCHAR}, #{configValue,jdbcType=VARCHAR},
    #{configType,jdbcType=INTEGER}, #{creator,jdbcType=VARCHAR}, #{memo,jdbcType=VARCHAR},
    now(), now()})
  </insert>

  <update id="updateByPrimaryKeySelective" parameterType="com.chitchat.admin.bean.SysBaseConfig">
    update sys_base_config
    <set>
      <if test="configName != null">
        config_name = #{configName,jdbcType=VARCHAR},
      </if>
      <if test="configKey != null">
        config_key = #{configKey,jdbcType=VARCHAR},
      </if>
      <if test="configValue != null">
        config_value = #{configValue,jdbcType=VARCHAR},
      </if>
      <if test="configType != null">
        config_type = #{configType,jdbcType=INTEGER},
      </if>
      <if test="creator != null">
        creator = #{creator,jdbcType=VARCHAR},
      </if>
      <if test="memo != null">
        memo = #{memo,jdbcType=VARCHAR},
      </if>
      modified_time = now()
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>

  <update id="update" parameterType="com.chitchat.admin.bean.SysBaseConfig">
    update sys_base_config
    set config_name = #{configName,jdbcType=VARCHAR},
        config_key = #{configKey,jdbcType=VARCHAR},
        config_value = #{configValue,jdbcType=VARCHAR},
        config_type = #{configType,jdbcType=INTEGER},
        creator = #{creator,jdbcType=VARCHAR},
        memo = #{memo,jdbcType=VARCHAR},
        modified_time = now()
    where id = #{id,jdbcType=BIGINT}
  </update>

  <select id="list" parameterType="com.chitchat.common.base.BasePageRequestModel" resultType="com.chitchat.admin.bean.SysBaseConfig">
    select *
    from sys_base_config
    where 1=1
      <if test="likeName != null and likeName !=''">
        and config_name like concat('%',#{likeName},'%')
      </if>
    order by id desc
  </select>

  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultType="com.chitchat.admin.bean.SysBaseConfig">
    select *
    from sys_base_config
    where id = #{id,jdbcType=BIGINT}
  </select>

  <select id="getById" parameterType="java.lang.Long" resultType="com.chitchat.admin.bean.SysBaseConfig">
    select *
    from sys_base_config
    where id = #{id,jdbcType=BIGINT}
  </select>

  <!--根据key获取配置信息-->
  <select id="getByConfigKey" parameterType="java.lang.String" resultType="com.chitchat.admin.bean.SysBaseConfig">
    select *
    from sys_base_config
    where config_key = #{configKey,jdbcType=VARCHAR}
  </select>

  <delete id="deleteByLongId" parameterType="java.lang.Long">
    delete from sys_base_config
    where id = #{id,jdbcType=BIGINT}
  </delete>

</mapper>
